---
- name: Set OS dependent variables
  include_vars: "{{ item }}"
  with_first_found:
   - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
   - "{{ ansible_distribution }}.yml"
   - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
   - "{{ ansible_os_family }}.yml"
   - default.yml
  tags:
    - sshd

- name: OS is supported
  assert:
    that: sshd_os_supported == True
  tags:
    - sshd

- name: Installed
  action: >
    {{ ansible_pkg_mgr }}
    name="{{ item }}"
    state=installed
  with_items: "{{ sshd_packages }}"
  tags:
    - sshd

- name: Register our custom SSH port "{{ sshd.Port }}" with SELinux
  become: yes
  become_method: sudo
  seport:
    ports: "{{ sshd.Port }}"
    proto: tcp
    setype: ssh_port_t
    state: present
  when: ansible_os_family == "RedHat"

- name: Run directory
  file:
    path: /var/run/sshd
    state: directory
    mode: 0755
  when: sshd_manage_var_run
  tags:
    - sshd

- name: Configuration
  template:
    src: sshd_config.j2
    dest: "{{ sshd_config_file }}"
    owner: "{{ sshd_config_owner }}"
    group: "{{ sshd_config_group }}"
    mode: "{{ sshd_config_mode }}"
    validate: "{{ sshd_binary }} -t -f %s"
  notify: reload_sshd
  tags:
    - sshd

- block:
  - name: Check anything listening on new port {{ sshd.Port }}
    shell: "ss -tulpn | grep LISTEN | grep {{ sshd.Port }}"
    become: yes
    become_method: sudo
    register: listening

  - name: Debug who is listening on new port {{ sshd.Port }}
    debug: var=listening.stdout
  ignore_errors: true

- name: Service enabled and running
  service:
    name: "{{ sshd_service }}"
    enabled: true
    state: running
  when: sshd_manage_service
  tags:
    - sshd

- name: Register that this role has run
  set_fact: sshd_has_run=true
  when: sshd_has_run is not defined
  tags:
    - sshd
